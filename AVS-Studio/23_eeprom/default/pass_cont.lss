
pass_cont.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000011a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000006  00800060  0000011a  0000018e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .debug_aranges 00000020  00000000  00000000  00000194  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 0000001b  00000000  00000000  000001b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   0000009c  00000000  00000000  000001cf  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000069  00000000  00000000  0000026b  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000070  00000000  00000000  000002d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000020  00000000  00000000  00000344  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000074  00000000  00000000  00000364  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea e1       	ldi	r30, 0x1A	; 26
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a6 36       	cpi	r26, 0x66	; 102
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 8b 00 	jmp	0x116	; 0x116 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
#include<avr/io.h>
#include<util/delay.h>
#include<avr/eeprom.h>
void main()
{
  82:	df 93       	push	r29
  84:	cf 93       	push	r28
  86:	cd b7       	in	r28, 0x3d	; 61
  88:	de b7       	in	r29, 0x3e	; 62
  8a:	2a 97       	sbiw	r28, 0x0a	; 10
  8c:	0f b6       	in	r0, 0x3f	; 63
  8e:	f8 94       	cli
  90:	de bf       	out	0x3e, r29	; 62
  92:	0f be       	out	0x3f, r0	; 63
  94:	cd bf       	out	0x3d, r28	; 61
/*char c[10];
eeprom_write_block("guru",0x000000,10);
eeprom_read_block(c,0x000000,10);*/

char n[10];
eeprom_write_block("1234",0x000000,10);
  96:	80 e6       	ldi	r24, 0x60	; 96
  98:	90 e0       	ldi	r25, 0x00	; 0
  9a:	60 e0       	ldi	r22, 0x00	; 0
  9c:	70 e0       	ldi	r23, 0x00	; 0
  9e:	4a e0       	ldi	r20, 0x0A	; 10
  a0:	50 e0       	ldi	r21, 0x00	; 0
  a2:	0e 94 74 00 	call	0xe8	; 0xe8 <__eewr_block_m16>
eeprom_read_block(n,0x000000,10);
  a6:	ce 01       	movw	r24, r28
  a8:	01 96       	adiw	r24, 0x01	; 1
  aa:	60 e0       	ldi	r22, 0x00	; 0
  ac:	70 e0       	ldi	r23, 0x00	; 0
  ae:	4a e0       	ldi	r20, 0x0A	; 10
  b0:	50 e0       	ldi	r21, 0x00	; 0
  b2:	0e 94 64 00 	call	0xc8	; 0xc8 <__eerd_block_m16>
}
  b6:	2a 96       	adiw	r28, 0x0a	; 10
  b8:	0f b6       	in	r0, 0x3f	; 63
  ba:	f8 94       	cli
  bc:	de bf       	out	0x3e, r29	; 62
  be:	0f be       	out	0x3f, r0	; 63
  c0:	cd bf       	out	0x3d, r28	; 61
  c2:	cf 91       	pop	r28
  c4:	df 91       	pop	r29
  c6:	08 95       	ret

000000c8 <__eerd_block_m16>:
  c8:	dc 01       	movw	r26, r24
  ca:	cb 01       	movw	r24, r22

000000cc <__eerd_blraw_m16>:
  cc:	fc 01       	movw	r30, r24
  ce:	e1 99       	sbic	0x1c, 1	; 28
  d0:	fe cf       	rjmp	.-4      	; 0xce <__eerd_blraw_m16+0x2>
  d2:	06 c0       	rjmp	.+12     	; 0xe0 <__eerd_blraw_m16+0x14>
  d4:	ff bb       	out	0x1f, r31	; 31
  d6:	ee bb       	out	0x1e, r30	; 30
  d8:	e0 9a       	sbi	0x1c, 0	; 28
  da:	31 96       	adiw	r30, 0x01	; 1
  dc:	0d b2       	in	r0, 0x1d	; 29
  de:	0d 92       	st	X+, r0
  e0:	41 50       	subi	r20, 0x01	; 1
  e2:	50 40       	sbci	r21, 0x00	; 0
  e4:	b8 f7       	brcc	.-18     	; 0xd4 <__eerd_blraw_m16+0x8>
  e6:	08 95       	ret

000000e8 <__eewr_block_m16>:
  e8:	dc 01       	movw	r26, r24
  ea:	cb 01       	movw	r24, r22
  ec:	03 c0       	rjmp	.+6      	; 0xf4 <__eewr_block_m16+0xc>
  ee:	2d 91       	ld	r18, X+
  f0:	0e 94 7f 00 	call	0xfe	; 0xfe <__eewr_r18_m16>
  f4:	41 50       	subi	r20, 0x01	; 1
  f6:	50 40       	sbci	r21, 0x00	; 0
  f8:	d0 f7       	brcc	.-12     	; 0xee <__eewr_block_m16+0x6>
  fa:	08 95       	ret

000000fc <__eewr_byte_m16>:
  fc:	26 2f       	mov	r18, r22

000000fe <__eewr_r18_m16>:
  fe:	e1 99       	sbic	0x1c, 1	; 28
 100:	fe cf       	rjmp	.-4      	; 0xfe <__eewr_r18_m16>
 102:	9f bb       	out	0x1f, r25	; 31
 104:	8e bb       	out	0x1e, r24	; 30
 106:	2d bb       	out	0x1d, r18	; 29
 108:	0f b6       	in	r0, 0x3f	; 63
 10a:	f8 94       	cli
 10c:	e2 9a       	sbi	0x1c, 2	; 28
 10e:	e1 9a       	sbi	0x1c, 1	; 28
 110:	0f be       	out	0x3f, r0	; 63
 112:	01 96       	adiw	r24, 0x01	; 1
 114:	08 95       	ret

00000116 <_exit>:
 116:	f8 94       	cli

00000118 <__stop_program>:
 118:	ff cf       	rjmp	.-2      	; 0x118 <__stop_program>

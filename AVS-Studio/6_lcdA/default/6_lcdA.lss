
6_lcdA.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001ea  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  0000023e  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000005a  00000000  00000000  0000025e  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   0000035d  00000000  00000000  000002b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 0000013a  00000000  00000000  00000615  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000342  00000000  00000000  0000074f  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000070  00000000  00000000  00000a94  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000e7  00000000  00000000  00000b04  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000060  00000000  00000000  00000beb  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea ee       	ldi	r30, 0xEA	; 234
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 a6 00 	call	0x14c	; 0x14c <main>
  8a:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <lcd_cmd>:
dis_cmd(0x0C);
dis_cmd(0x06);
}

void lcd_cmd(int x)
{
  92:	82 bb       	out	0x12, r24	; 18
PORTD=x;
PORTD&=~(1<<rs);
  94:	90 98       	cbi	0x12, 0	; 18
PORTD&=~(1<<rw);
  96:	91 98       	cbi	0x12, 1	; 18
PORTD|=(1<<en);
  98:	92 9a       	sbi	0x12, 2	; 18
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  9a:	8a ef       	ldi	r24, 0xFA	; 250
  9c:	90 e0       	ldi	r25, 0x00	; 0
  9e:	01 97       	sbiw	r24, 0x01	; 1
  a0:	f1 f7       	brne	.-4      	; 0x9e <lcd_cmd+0xc>
_delay_ms(1);
PORTD&=~(1<<en);
  a2:	92 98       	cbi	0x12, 2	; 18
}
  a4:	08 95       	ret

000000a6 <dis_cmd>:

void dis_cmd(int x)
{
  a6:	9c 01       	movw	r18, r24
  a8:	20 7f       	andi	r18, 0xF0	; 240
  aa:	30 70       	andi	r19, 0x00	; 0
  ac:	22 bb       	out	0x12, r18	; 18
}

void lcd_cmd(int x)
{
PORTD=x;
PORTD&=~(1<<rs);
  ae:	90 98       	cbi	0x12, 0	; 18
PORTD&=~(1<<rw);
  b0:	91 98       	cbi	0x12, 1	; 18
PORTD|=(1<<en);
  b2:	92 9a       	sbi	0x12, 2	; 18
  b4:	2a ef       	ldi	r18, 0xFA	; 250
  b6:	30 e0       	ldi	r19, 0x00	; 0
  b8:	f9 01       	movw	r30, r18
  ba:	31 97       	sbiw	r30, 0x01	; 1
  bc:	f1 f7       	brne	.-4      	; 0xba <dis_cmd+0x14>
_delay_ms(1);
PORTD&=~(1<<en);
  be:	92 98       	cbi	0x12, 2	; 18
dis_cmd(0x06);
}

void lcd_cmd(int x)
{
PORTD=x;
  c0:	44 e0       	ldi	r20, 0x04	; 4
  c2:	88 0f       	add	r24, r24
  c4:	99 1f       	adc	r25, r25
  c6:	4a 95       	dec	r20
  c8:	e1 f7       	brne	.-8      	; 0xc2 <dis_cmd+0x1c>
  ca:	90 70       	andi	r25, 0x00	; 0
  cc:	82 bb       	out	0x12, r24	; 18
PORTD&=~(1<<rs);
  ce:	90 98       	cbi	0x12, 0	; 18
PORTD&=~(1<<rw);
  d0:	91 98       	cbi	0x12, 1	; 18
PORTD|=(1<<en);
  d2:	92 9a       	sbi	0x12, 2	; 18
  d4:	c9 01       	movw	r24, r18
  d6:	01 97       	sbiw	r24, 0x01	; 1
  d8:	f1 f7       	brne	.-4      	; 0xd6 <dis_cmd+0x30>
_delay_ms(1);
PORTD&=~(1<<en);
  da:	92 98       	cbi	0x12, 2	; 18
int x1;
x1=x&0xf0;
lcd_cmd(x1);
x1=(x<<4)&0xf0;
lcd_cmd(x1);
}
  dc:	08 95       	ret

000000de <lcd_init>:
}
return 0;
}

void lcd_init()
{
  de:	82 e0       	ldi	r24, 0x02	; 2
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	0e 94 53 00 	call	0xa6	; 0xa6 <dis_cmd>
dis_cmd(0x02);
dis_cmd(0x28);
  e6:	88 e2       	ldi	r24, 0x28	; 40
  e8:	90 e0       	ldi	r25, 0x00	; 0
  ea:	0e 94 53 00 	call	0xa6	; 0xa6 <dis_cmd>
dis_cmd(0x0C);
  ee:	8c e0       	ldi	r24, 0x0C	; 12
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	0e 94 53 00 	call	0xa6	; 0xa6 <dis_cmd>
dis_cmd(0x06);
  f6:	86 e0       	ldi	r24, 0x06	; 6
  f8:	90 e0       	ldi	r25, 0x00	; 0
  fa:	0e 94 53 00 	call	0xa6	; 0xa6 <dis_cmd>
}
  fe:	08 95       	ret

00000100 <lcd_data>:
x1=(x<<4)&0xf0;
lcd_cmd(x1);
}

void lcd_data(int x)
{
 100:	82 bb       	out	0x12, r24	; 18
PORTD=x;
PORTD|=(1<<rs);
 102:	90 9a       	sbi	0x12, 0	; 18
PORTD&=~(1<<rw);
 104:	91 98       	cbi	0x12, 1	; 18
PORTD|=(1<<en);
 106:	92 9a       	sbi	0x12, 2	; 18
 108:	8a ef       	ldi	r24, 0xFA	; 250
 10a:	90 e0       	ldi	r25, 0x00	; 0
 10c:	01 97       	sbiw	r24, 0x01	; 1
 10e:	f1 f7       	brne	.-4      	; 0x10c <lcd_data+0xc>
_delay_ms(1);
PORTD&=~(1<<en);
 110:	92 98       	cbi	0x12, 2	; 18
}
 112:	08 95       	ret

00000114 <dis_data>:

void dis_data(int x)
{
 114:	9c 01       	movw	r18, r24
 116:	20 7f       	andi	r18, 0xF0	; 240
 118:	30 70       	andi	r19, 0x00	; 0
 11a:	22 bb       	out	0x12, r18	; 18
}

void lcd_data(int x)
{
PORTD=x;
PORTD|=(1<<rs);
 11c:	90 9a       	sbi	0x12, 0	; 18
PORTD&=~(1<<rw);
 11e:	91 98       	cbi	0x12, 1	; 18
PORTD|=(1<<en);
 120:	92 9a       	sbi	0x12, 2	; 18
 122:	2a ef       	ldi	r18, 0xFA	; 250
 124:	30 e0       	ldi	r19, 0x00	; 0
 126:	f9 01       	movw	r30, r18
 128:	31 97       	sbiw	r30, 0x01	; 1
 12a:	f1 f7       	brne	.-4      	; 0x128 <dis_data+0x14>
_delay_ms(1);
PORTD&=~(1<<en);
 12c:	92 98       	cbi	0x12, 2	; 18
lcd_cmd(x1);
}

void lcd_data(int x)
{
PORTD=x;
 12e:	54 e0       	ldi	r21, 0x04	; 4
 130:	88 0f       	add	r24, r24
 132:	99 1f       	adc	r25, r25
 134:	5a 95       	dec	r21
 136:	e1 f7       	brne	.-8      	; 0x130 <dis_data+0x1c>
 138:	90 70       	andi	r25, 0x00	; 0
 13a:	82 bb       	out	0x12, r24	; 18
PORTD|=(1<<rs);
 13c:	90 9a       	sbi	0x12, 0	; 18
PORTD&=~(1<<rw);
 13e:	91 98       	cbi	0x12, 1	; 18
PORTD|=(1<<en);
 140:	92 9a       	sbi	0x12, 2	; 18
 142:	c9 01       	movw	r24, r18
 144:	01 97       	sbiw	r24, 0x01	; 1
 146:	f1 f7       	brne	.-4      	; 0x144 <dis_data+0x30>
_delay_ms(1);
PORTD&=~(1<<en);
 148:	92 98       	cbi	0x12, 2	; 18
int x1;
x1=x&0xf0;
lcd_data(x1);
x1=(x<<4)&0xf0;
lcd_data(x1);
}
 14a:	08 95       	ret

0000014c <main>:
void dis_cmd(int);
void lcd_data(int);
void dis_data(int);

int main()
{
 14c:	8f ef       	ldi	r24, 0xFF	; 255
 14e:	81 bb       	out	0x11, r24	; 17
DDRD=0xff;
lcd_init();
 150:	0e 94 6f 00 	call	0xde	; 0xde <lcd_init>
while(1)
{
dis_cmd(0x80);
 154:	80 e8       	ldi	r24, 0x80	; 128
 156:	90 e0       	ldi	r25, 0x00	; 0
 158:	0e 94 53 00 	call	0xa6	; 0xa6 <dis_cmd>
dis_data('0');
 15c:	80 e3       	ldi	r24, 0x30	; 48
 15e:	90 e0       	ldi	r25, 0x00	; 0
 160:	0e 94 8a 00 	call	0x114	; 0x114 <dis_data>

dis_cmd(0x81);
 164:	81 e8       	ldi	r24, 0x81	; 129
 166:	90 e0       	ldi	r25, 0x00	; 0
 168:	0e 94 53 00 	call	0xa6	; 0xa6 <dis_cmd>
dis_data('1');
 16c:	81 e3       	ldi	r24, 0x31	; 49
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	0e 94 8a 00 	call	0x114	; 0x114 <dis_data>

dis_cmd(0x82);
 174:	82 e8       	ldi	r24, 0x82	; 130
 176:	90 e0       	ldi	r25, 0x00	; 0
 178:	0e 94 53 00 	call	0xa6	; 0xa6 <dis_cmd>
dis_data('2');
 17c:	82 e3       	ldi	r24, 0x32	; 50
 17e:	90 e0       	ldi	r25, 0x00	; 0
 180:	0e 94 8a 00 	call	0x114	; 0x114 <dis_data>

dis_cmd(0x83);
 184:	83 e8       	ldi	r24, 0x83	; 131
 186:	90 e0       	ldi	r25, 0x00	; 0
 188:	0e 94 53 00 	call	0xa6	; 0xa6 <dis_cmd>
dis_data('3');
 18c:	83 e3       	ldi	r24, 0x33	; 51
 18e:	90 e0       	ldi	r25, 0x00	; 0
 190:	0e 94 8a 00 	call	0x114	; 0x114 <dis_data>

dis_cmd(0x84);
 194:	84 e8       	ldi	r24, 0x84	; 132
 196:	90 e0       	ldi	r25, 0x00	; 0
 198:	0e 94 53 00 	call	0xa6	; 0xa6 <dis_cmd>
dis_data('4');
 19c:	84 e3       	ldi	r24, 0x34	; 52
 19e:	90 e0       	ldi	r25, 0x00	; 0
 1a0:	0e 94 8a 00 	call	0x114	; 0x114 <dis_data>


dis_cmd(0xc0);
 1a4:	80 ec       	ldi	r24, 0xC0	; 192
 1a6:	90 e0       	ldi	r25, 0x00	; 0
 1a8:	0e 94 53 00 	call	0xa6	; 0xa6 <dis_cmd>
dis_data('5');
 1ac:	85 e3       	ldi	r24, 0x35	; 53
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	0e 94 8a 00 	call	0x114	; 0x114 <dis_data>

dis_cmd(0xc1);
 1b4:	81 ec       	ldi	r24, 0xC1	; 193
 1b6:	90 e0       	ldi	r25, 0x00	; 0
 1b8:	0e 94 53 00 	call	0xa6	; 0xa6 <dis_cmd>
dis_data('6');
 1bc:	86 e3       	ldi	r24, 0x36	; 54
 1be:	90 e0       	ldi	r25, 0x00	; 0
 1c0:	0e 94 8a 00 	call	0x114	; 0x114 <dis_data>

dis_cmd(0xc2);
 1c4:	82 ec       	ldi	r24, 0xC2	; 194
 1c6:	90 e0       	ldi	r25, 0x00	; 0
 1c8:	0e 94 53 00 	call	0xa6	; 0xa6 <dis_cmd>
dis_data('7');
 1cc:	87 e3       	ldi	r24, 0x37	; 55
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	0e 94 8a 00 	call	0x114	; 0x114 <dis_data>

dis_cmd(0x83);
 1d4:	83 e8       	ldi	r24, 0x83	; 131
 1d6:	90 e0       	ldi	r25, 0x00	; 0
 1d8:	0e 94 53 00 	call	0xa6	; 0xa6 <dis_cmd>
dis_data('8');
 1dc:	88 e3       	ldi	r24, 0x38	; 56
 1de:	90 e0       	ldi	r25, 0x00	; 0
 1e0:	0e 94 8a 00 	call	0x114	; 0x114 <dis_data>
 1e4:	b7 cf       	rjmp	.-146    	; 0x154 <main+0x8>

000001e6 <_exit>:
 1e6:	f8 94       	cli

000001e8 <__stop_program>:
 1e8:	ff cf       	rjmp	.-2      	; 0x1e8 <__stop_program>


4_led_matrix_disco_lite.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000d4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  00000128  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000001b  00000000  00000000  00000148  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   000001ea  00000000  00000000  00000163  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000e8  00000000  00000000  0000034d  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   0000020f  00000000  00000000  00000435  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000020  00000000  00000000  00000644  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000de  00000000  00000000  00000664  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    000000e0  00000000  00000000  00000742  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000048  00000000  00000000  00000822  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 68 00 	jmp	0xd0	; 0xd0 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include<avr/io.h>
#include<util/delay.h>
int main()
{
  6c:	1f 93       	push	r17
DDRD=0xff;
  6e:	8f ef       	ldi	r24, 0xFF	; 255
  70:	81 bb       	out	0x11, r24	; 17
DDRB=0xff;
  72:	87 bb       	out	0x17, r24	; 23
while(1)
{
  {
  PORTD=0b00011000;
  74:	18 e1       	ldi	r17, 0x18	; 24
  PORTB=0b11100111;
  76:	b7 ee       	ldi	r27, 0xE7	; 231
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  78:	29 e1       	ldi	r18, 0x19	; 25
  7a:	30 e0       	ldi	r19, 0x00	; 0
  }
  _delay_ms(400);
  {
  PORTD=0b00111100;
  7c:	ac e3       	ldi	r26, 0x3C	; 60
  PORTB=0b11000011;
  7e:	73 ec       	ldi	r23, 0xC3	; 195
  }
  _delay_ms(400);
  {
   PORTD=0b01111110;
  80:	6e e7       	ldi	r22, 0x7E	; 126
   PORTB=0b10000001;
  82:	51 e8       	ldi	r21, 0x81	; 129
  }
  _delay_ms(400);
  {
   PORTD=0b11111111;
  84:	4f ef       	ldi	r20, 0xFF	; 255
DDRD=0xff;
DDRB=0xff;
while(1)
{
  {
  PORTD=0b00011000;
  86:	12 bb       	out	0x12, r17	; 18
  PORTB=0b11100111;
  88:	b8 bb       	out	0x18, r27	; 24
  8a:	80 ea       	ldi	r24, 0xA0	; 160
  8c:	9f e0       	ldi	r25, 0x0F	; 15
  8e:	f9 01       	movw	r30, r18
  90:	31 97       	sbiw	r30, 0x01	; 1
  92:	f1 f7       	brne	.-4      	; 0x90 <main+0x24>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  94:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  96:	d9 f7       	brne	.-10     	; 0x8e <main+0x22>
  }
  _delay_ms(400);
  {
  PORTD=0b00111100;
  98:	a2 bb       	out	0x12, r26	; 18
  PORTB=0b11000011;
  9a:	78 bb       	out	0x18, r23	; 24
  9c:	80 ea       	ldi	r24, 0xA0	; 160
  9e:	9f e0       	ldi	r25, 0x0F	; 15
  a0:	f9 01       	movw	r30, r18
  a2:	31 97       	sbiw	r30, 0x01	; 1
  a4:	f1 f7       	brne	.-4      	; 0xa2 <main+0x36>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  a6:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  a8:	d9 f7       	brne	.-10     	; 0xa0 <main+0x34>
  }
  _delay_ms(400);
  {
   PORTD=0b01111110;
  aa:	62 bb       	out	0x12, r22	; 18
   PORTB=0b10000001;
  ac:	58 bb       	out	0x18, r21	; 24
  ae:	80 ea       	ldi	r24, 0xA0	; 160
  b0:	9f e0       	ldi	r25, 0x0F	; 15
  b2:	f9 01       	movw	r30, r18
  b4:	31 97       	sbiw	r30, 0x01	; 1
  b6:	f1 f7       	brne	.-4      	; 0xb4 <main+0x48>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  b8:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  ba:	d9 f7       	brne	.-10     	; 0xb2 <main+0x46>
  }
  _delay_ms(400);
  {
   PORTD=0b11111111;
  bc:	42 bb       	out	0x12, r20	; 18
   PORTB=0b00000000;
  be:	18 ba       	out	0x18, r1	; 24
  c0:	80 ea       	ldi	r24, 0xA0	; 160
  c2:	9f e0       	ldi	r25, 0x0F	; 15
  c4:	f9 01       	movw	r30, r18
  c6:	31 97       	sbiw	r30, 0x01	; 1
  c8:	f1 f7       	brne	.-4      	; 0xc6 <main+0x5a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  ca:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  cc:	d9 f7       	brne	.-10     	; 0xc4 <main+0x58>
  ce:	db cf       	rjmp	.-74     	; 0x86 <main+0x1a>

000000d0 <_exit>:
  d0:	f8 94       	cli

000000d2 <__stop_program>:
  d2:	ff cf       	rjmp	.-2      	; 0xd2 <__stop_program>
